knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
## From Session 3
library(dplyr)
## From Session4
library(readxl)
library(tibble)
library(tidyr)
## From Session 5
library(ggplot2)
library(ggpubr)
library(coronavirus)
## From Session 6
library(shiny)
library(shinydashboard)
library(shiny)
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
bins <- seq(min(x), max(x), length.out = input$myBins + 1)
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "myBins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
textOutput(outputId = "typeText"),
plotOutput(outputId = "distPlot")
)
)
)
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
runApp('Session7_Live')
rm(list=ls())
# Change variable here
coronavirus %>%
filter(Province.State == "") -> coronavirus.filter
countries <- unique(coronavirus.filter$Country.Region)
runApp('coronavirus/covid.R')
library(ggplot2)
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
tail(coronavirus)
head(coronavirus)
runApp('coronavirus/covid.R')
runApp('coronavirus/covid.R')
